<%= form_for [:admin, @user_form], url: @admin_user.present? ? admin_user_path(@admin_user) : admin_users_path, method: @admin_user.present? ? :put : :post, data: { turbo: false } do |f| %>
  <div class="card card-primary card-tabs box-solid">
    <div class="card-header p-0 pt-1" style="background-color: #6c757d;">
    </div>
    <div class="card-body">
      <div class="tab-content" id="custom-tabs-one-tabContent">
        <div class="tab-pane fade show active" id="tab_1">
          <%= render partial: 'shared/error_messages', locals: { object: @user_form } %>
          <div class="row">
            <div class="col-md-6">
              <div class="form-group">
                <%= f.label :name %><br>
                <%= f.text_field :name, class: "form-control" %>
              </div>
              <div class="form-group">
                <%= f.label :password %><br>
                <%= f.password_field :password, class: "form-control" %>
              </div>
              <div class="form-group">
                <%= f.label :password_confirmation %><br>
                <%= f.password_field :password_confirmation, class: "form-control" %>
              </div>
              <div class="form-group">
                <%= f.label :phone,  safe_join([t('admin.users.phone'), content_tag(:small, " *", class: "text-danger")]) %>
                <%= f.number_field :phone, class: "form-control" %>
              </div>
              <div class="form-group">
                <%= f.label :email, safe_join([t('admin.users.email'), content_tag(:small, " *", class: "text-danger")]) %>
                <%= f.text_field :email, class: "form-control" %>
              </div>
            </div>
            <div class="col-md-6">
              <div class="form-group">
              <div class="form-group">
              <%= f.label :status %><br>
              <%= f.select :status, [[t('status.active'), :active], [t('status.disable'), :disable]], {}, { class: "form-control" }   %>

              </div>
                <%= f.label :gender %>
              <%= f.select :gender, [[t('users.male'), :male], [t('users.fermale'), :fermale], [t('users.other'), :other] ], {}, { class: "form-control" }   %>

              </div>
              <div class="form-group">
                <%= f.label :birthday %>
                <%= f.date_field :birthday, class: "form-control" %>
              </div>
              <div class="form-group">
                <%= f.label :address %>
                <%= f.text_field :address, class: "form-control" %>
              </div>
            </div>

            <div class="mb-3" data-controller="image" id="Img">
              <%= f.label :images  %>
              <%= f.file_field :images, multiple: true, class: "form-control quarter", accept: "image/png, image/jpeg, image/jpg", "data-image-target": "input" %>
              <div id="image-preview-container" style="display: flex; flex-wrap: wrap; width: 75px ;height: 100px;">
              </div>
            </div>

          <br>
          <div class="actions">
            <%= f.submit "Save" , class: "btn btn-sm btn-success" %>
          </div>
        </div>
      </div>
    </div>
  </div>
<% end %>
<style>
  .custome-image {
  max-width: 100%;
  max-height: 200px; /* Điều chỉnh kích thước tùy ý */
}

</style>
<script>
  tinymce.remove();
  tinymce.init({
    selector: '.tinymce',
    plugins: 'lists link image table code help wordcount'
  });
</script>
<script>
  let isEventBound = false;
  document.addEventListener('DOMContentLoaded', function () {
    if (!isEventBound) {
      const inputElement = document.querySelector('[data-image-target="input"]');
      const previewContainer = document.getElementById('image-preview-container');

      inputElement.addEventListener('change', function (event) {
        const fileList = event.target.files;

        for (let i = 0; i < fileList.length; i++) {
          const file = fileList[i];

          // Kiểm tra nếu là tệp hình ảnh
          if (file.type.startsWith('image/')) {
            const reader = new FileReader();
            reader.onload = function (event) {
              // Tạo một phần tử img để hiển thị tấm hình
              const imgElement = document.createElement('img');
              imgElement.setAttribute('src', event.target.result);
              imgElement.classList.add('preview-image');
              // Thêm tấm hình vào preview container
              previewContainer.appendChild(imgElement);
            };
            reader.readAsDataURL(file);
          }
        }
      });
      isEventBound = true;
    }
  });
</script>
